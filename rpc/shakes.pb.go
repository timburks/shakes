// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: timburks/shakespeare/v1/shakes.proto

package rpc

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for ListWordCounts.
type ListWordCountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The word to match.
	Word string `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	// The maximum number of responses to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A token to use for paginated requests.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListWordCountsRequest) Reset() {
	*x = ListWordCountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timburks_shakespeare_v1_shakes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWordCountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWordCountsRequest) ProtoMessage() {}

func (x *ListWordCountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timburks_shakespeare_v1_shakes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWordCountsRequest.ProtoReflect.Descriptor instead.
func (*ListWordCountsRequest) Descriptor() ([]byte, []int) {
	return file_timburks_shakespeare_v1_shakes_proto_rawDescGZIP(), []int{0}
}

func (x *ListWordCountsRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *ListWordCountsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWordCountsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// A count of words in a document.
type WordCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The work containing the word.
	Corpus string `protobuf:"bytes,1,opt,name=corpus,proto3" json:"corpus,omitempty"`
	// The date of the work containing the word.
	CorpusDate int32 `protobuf:"varint,2,opt,name=corpus_date,json=corpusDate,proto3" json:"corpus_date,omitempty"`
	// The word being counted.
	Word string `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`
	// The number of occurrences of the word in the corpus (document).
	WordCount int32 `protobuf:"varint,4,opt,name=word_count,json=wordCount,proto3" json:"word_count,omitempty"`
}

func (x *WordCount) Reset() {
	*x = WordCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timburks_shakespeare_v1_shakes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordCount) ProtoMessage() {}

func (x *WordCount) ProtoReflect() protoreflect.Message {
	mi := &file_timburks_shakespeare_v1_shakes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordCount.ProtoReflect.Descriptor instead.
func (*WordCount) Descriptor() ([]byte, []int) {
	return file_timburks_shakespeare_v1_shakes_proto_rawDescGZIP(), []int{1}
}

func (x *WordCount) GetCorpus() string {
	if x != nil {
		return x.Corpus
	}
	return ""
}

func (x *WordCount) GetCorpusDate() int32 {
	if x != nil {
		return x.CorpusDate
	}
	return 0
}

func (x *WordCount) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *WordCount) GetWordCount() int32 {
	if x != nil {
		return x.WordCount
	}
	return 0
}

// The response value for ListWordCounts.
type ListWordCountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The matching word counts.
	WordCounts []*WordCount `protobuf:"bytes,1,rep,name=word_counts,json=wordCounts,proto3" json:"word_counts,omitempty"`
	// A token that can be used to get more pages of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListWordCountsResponse) Reset() {
	*x = ListWordCountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timburks_shakespeare_v1_shakes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWordCountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWordCountsResponse) ProtoMessage() {}

func (x *ListWordCountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timburks_shakespeare_v1_shakes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWordCountsResponse.ProtoReflect.Descriptor instead.
func (*ListWordCountsResponse) Descriptor() ([]byte, []int) {
	return file_timburks_shakespeare_v1_shakes_proto_rawDescGZIP(), []int{2}
}

func (x *ListWordCountsResponse) GetWordCounts() []*WordCount {
	if x != nil {
		return x.WordCounts
	}
	return nil
}

func (x *ListWordCountsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_timburks_shakespeare_v1_shakes_proto protoreflect.FileDescriptor

var file_timburks_shakespeare_v1_shakes_proto_rawDesc = []byte{
	0x0a, 0x24, 0x74, 0x69, 0x6d, 0x62, 0x75, 0x72, 0x6b, 0x73, 0x2f, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x73, 0x70, 0x65, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x74, 0x69, 0x6d, 0x62, 0x75, 0x72, 0x6b, 0x73,
	0x2e, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x70, 0x65, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x67, 0x0a,
	0x15, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x77, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6f, 0x72, 0x70, 0x75, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x85, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x77, 0x6f,
	0x72, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x74, 0x69, 0x6d, 0x62, 0x75, 0x72, 0x6b, 0x73, 0x2e, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x73, 0x70, 0x65, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0x93, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x89, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x2e, 0x74, 0x69, 0x6d, 0x62, 0x75, 0x72, 0x6b, 0x73, 0x2e,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x70, 0x65, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x74, 0x69, 0x6d, 0x62, 0x75, 0x72, 0x6b, 0x73, 0x2e,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x70, 0x65, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f,
	0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x64, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x42, 0x50, 0x0a,
	0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6d, 0x62, 0x75, 0x72, 0x6b, 0x73, 0x2e, 0x73, 0x68,
	0x61, 0x6b, 0x65, 0x73, 0x70, 0x65, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x53, 0x68,
	0x61, 0x6b, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x22, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x69, 0x6d, 0x62, 0x75, 0x72, 0x6b, 0x73,
	0x2f, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x3b, 0x72, 0x70, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_timburks_shakespeare_v1_shakes_proto_rawDescOnce sync.Once
	file_timburks_shakespeare_v1_shakes_proto_rawDescData = file_timburks_shakespeare_v1_shakes_proto_rawDesc
)

func file_timburks_shakespeare_v1_shakes_proto_rawDescGZIP() []byte {
	file_timburks_shakespeare_v1_shakes_proto_rawDescOnce.Do(func() {
		file_timburks_shakespeare_v1_shakes_proto_rawDescData = protoimpl.X.CompressGZIP(file_timburks_shakespeare_v1_shakes_proto_rawDescData)
	})
	return file_timburks_shakespeare_v1_shakes_proto_rawDescData
}

var file_timburks_shakespeare_v1_shakes_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_timburks_shakespeare_v1_shakes_proto_goTypes = []interface{}{
	(*ListWordCountsRequest)(nil),  // 0: timburks.shakespeare.v1.ListWordCountsRequest
	(*WordCount)(nil),              // 1: timburks.shakespeare.v1.WordCount
	(*ListWordCountsResponse)(nil), // 2: timburks.shakespeare.v1.ListWordCountsResponse
}
var file_timburks_shakespeare_v1_shakes_proto_depIdxs = []int32{
	1, // 0: timburks.shakespeare.v1.ListWordCountsResponse.word_counts:type_name -> timburks.shakespeare.v1.WordCount
	0, // 1: timburks.shakespeare.v1.Query.ListWordCounts:input_type -> timburks.shakespeare.v1.ListWordCountsRequest
	2, // 2: timburks.shakespeare.v1.Query.ListWordCounts:output_type -> timburks.shakespeare.v1.ListWordCountsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_timburks_shakespeare_v1_shakes_proto_init() }
func file_timburks_shakespeare_v1_shakes_proto_init() {
	if File_timburks_shakespeare_v1_shakes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_timburks_shakespeare_v1_shakes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWordCountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timburks_shakespeare_v1_shakes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timburks_shakespeare_v1_shakes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWordCountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_timburks_shakespeare_v1_shakes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_timburks_shakespeare_v1_shakes_proto_goTypes,
		DependencyIndexes: file_timburks_shakespeare_v1_shakes_proto_depIdxs,
		MessageInfos:      file_timburks_shakespeare_v1_shakes_proto_msgTypes,
	}.Build()
	File_timburks_shakespeare_v1_shakes_proto = out.File
	file_timburks_shakespeare_v1_shakes_proto_rawDesc = nil
	file_timburks_shakespeare_v1_shakes_proto_goTypes = nil
	file_timburks_shakespeare_v1_shakes_proto_depIdxs = nil
}
